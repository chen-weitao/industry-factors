load('E:/deleted_data.Rdata')
monthly_returns=new_data[,c(1,2,3,4,11)]
save(monthly_returns,file='E:/monthly_returns.Rdata')
load('E:/monthly_returns.Rdata')
monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
先分组后aplly
View(monthly_returns)
View(monthly_returns)
group <- group_by(monthly_returns, V1, V8)
library(dplyr)
group <- group_by(monthly_returns, V1, V8)
View(group)
group %>% group_keys()
# 先分组后aplly
start <- aggregate(
monthly_returns$V3,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=first
)
View(start)
close <- aggregate(
monthly_returns$V3,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=first
)
View(start)
s_c <- cbind(start$x,close$x)
View(s_c)
s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
View(s_c)
close <- aggregate(
monthly_returns$V4,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=last
)
s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
View(s_c)
View(s_c)
s_c$monthly_return <- s_c$V3/s_c$V4
s_c$monthly_return <- s_cp[V3]/s_c[V4]
s_c$monthly_return <- s_c[V3]/s_c[V4]
s_c$monthly_return <- s_c['V3']/s_c['V4']
s_c$monthly_return <- s_c[['V3']]/s_c[['V4']]
s_c$monthly_return <- s_c[['V3']]/s_c[['V4']]
s_c <- as.data.frame(s_c)
s_c$monthly_return <- s_c$V3/s_c$V4
ow <- which(grepl('NA', s_c$V3))
row <- which(grepl('NA', s_c$V4))
row <- which(grepl('--', s_c$V4))
row <- which(grepl('--', s_c$V3))
s_c$monthly_return <- s_c$V3/s_c$V4
s_c$monthly_return <- (as.numerical(s_c$V4)-as.numerical(s_c$V3))/
as.numerical(s_c$V3)
s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
as.numeric(s_c$V3)
View(s_c)
save(s_c,file='E:/s_c.Rdata')
# library(dplyr)
#
# load('E:/deleted_data.Rdata')
# monthly_returns=new_data[,c(1,2,3,4,11)]
# save(monthly_returns,file='E:/monthly_returns.Rdata')
# load('E:/monthly_returns.Rdata')
# monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
# monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
# monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
# # group <- group_by(monthly_returns, V1, V8)
# # 先分组后aplly
# start <- aggregate(
#   monthly_returns$V3,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=first
# )
# close <- aggregate(
#   monthly_returns$V4,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=last
# )
# s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
# s_c <- as.data.frame(s_c)
# s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
#   as.numeric(s_c$V3)
# save(s_c,file='E:/s_c.Rdata')
load(s_c,file='E:/s_c.Rdata')
load(s_c,file='E:/s_c.Rdata')
load('E:/s_c.Rdata')
# library(dplyr)
#
# load('E:/deleted_data.Rdata')
# monthly_returns=new_data[,c(1,2,3,4,11)]
# save(monthly_returns,file='E:/monthly_returns.Rdata')
# load('E:/monthly_returns.Rdata')
# monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
# monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
# monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
# # group <- group_by(monthly_returns, V1, V8)
# # 先分组后aplly
# start <- aggregate(
#   monthly_returns$V3,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=first
# )
# close <- aggregate(
#   monthly_returns$V4,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=last
# )
# s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
# s_c <- as.data.frame(s_c)
# s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
#   as.numeric(s_c$V3)
# save(s_c,file='E:/s_c.Rdata')
load('E:/s_c.Rdata')
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
library(dplyr)
library(readxl)
#
# load('E:/deleted_data.Rdata')
# monthly_returns=new_data[,c(1,2,3,4,11)]
# save(monthly_returns,file='E:/monthly_returns.Rdata')
# load('E:/monthly_returns.Rdata')
# monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
# monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
# monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
# # group <- group_by(monthly_returns, V1, V8)
# # 先分组后aplly
# start <- aggregate(
#   monthly_returns$V3,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=first
# )
# close <- aggregate(
#   monthly_returns$V4,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=last
# )
# s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
# s_c <- as.data.frame(s_c)
# s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
#   as.numeric(s_c$V3)
# save(s_c,file='E:/s_c.Rdata')
load('E:/s_c.Rdata')
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
View(risk_free)
risk_free <- risk_free[3:nrow(risk_free),]
View(risk_free)
View(risk_free)
View(risk_free)
risk_free$yyyymm <- substr(risk_free$Clsdt,1,6)
View(risk_free)
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
View(risk_free)
View(s_c)
View(risk_free)
row <- which(grepl(risk_free[''], Industry$Stkcd))
row <- which(grepl(s_c['V2'], risk_free$yyyymm))
s_c$risk_free <- s_c[row,6]
View(s_c)
View(s_c)
s_c$risk_free <- s_c[row,6]
View(s_c)
load('E:/s_c.Rdata')
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
risk_free <- risk_free[3:nrow(risk_free),]
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
row <- which(grepl(s_c['V2'], risk_free$yyyymm))
s_c <- merge(s_c, risk_free$yyyymm, by.x = "V2", by.y = "yyyymm")
s_c <- merge(s_c, risk_free, by.x = "V2", by.y = "yyyymm")
library(dplyr)
library(readxl)
load('E:/deleted_data.Rdata')
monthly_returns=new_data[,c(1,2,3,4,11)]
save(monthly_returns,file='E:/monthly_returns.Rdata')
load('E:/monthly_returns.Rdata')
monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
# group <- group_by(monthly_returns, V1, V8)
# 先分组后apply
start <- aggregate(
monthly_returns$V3,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=first
)
close <- aggregate(
monthly_returns$V4,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=last
)
s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
s_c <- as.data.frame(s_c)
View(s_c)
s_c$V5 <- s_c[2:rcolums('V4'),V4]
s_c$V5 <- s_c[2:rcolums(s_c),V4]
View(s_c)
s_c$V5 <- s_c[2:rcolums(s_c),4]
s_c$V5 <- s_c[2:rcolumns(s_c),4]
s_c$V5 <- s_c[2:rcol(s_c),4]
s_c$V5 <- s_c[2:ncol(s_c),4]
View(s_c)
V5 <- s_c[2:ncol(s_c),4]
s_c$V5 <- s_c[2:nrow(s_c),4]
View(s_c)
s_c$V5 <- c(0,s_c[2:nrow(s_c),4])
View(s_c)
s_c$V5 <- c(s_c[2:nrow(s_c),4],0)
View(s_c)
s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
as.numeric(s_c$V3)
save(s_c,file='E:/s_c.Rdata')
gc()
gc()
load('E:/s_c.Rdata')
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
risk_free <- risk_free[3:nrow(risk_free),]
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
risk_free <- as.data.frame(risk_free)
colnames(s_c)[2] <- 'type'
monthly_risk_free <- aggregate(as.numeric(risk_free$Nrrmtdt), by=list(type=risk_free$yyyymm),mean)
new_s_c <- left_join(s_c,monthly_risk_free,by="type")
new_s_c$excess_monthly_return <- new_s_c$monthly_return*100-new_s_c$x
excess_risk_free <- new_s_c[order(new_s_c$V1),c('V1','type','excess_monthly_return')]
# 算上月末收盘价和这月末收盘价，或者IPO发行价
View(s_c)
gc()
library(dplyr)
library(readxl)
load('E:/deleted_data.Rdata')
monthly_returns=new_data[,c(1,2,3,4,11)]
save(monthly_returns,file='E:/monthly_returns.Rdata')
load('E:/monthly_returns.Rdata')
monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
# group <- group_by(monthly_returns, V1, V8)
# 先分组后apply
start <- aggregate(
monthly_returns$V3,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=first
)
close <- aggregate(
monthly_returns$V4,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=last
)
s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
s_c <- as.data.frame(s_c)
s_c$V5 <- c(0,s_c[1:nrow(s_c)-1,4])
s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
as.numeric(s_c$V3)
save(s_c,file='E:/s_c.Rdata')
# load('E:/s_c.Rdata')
# risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
# risk_free <- risk_free[3:nrow(risk_free),]
# risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
# risk_free <- as.data.frame(risk_free)
# colnames(s_c)[2] <- 'type'
# monthly_risk_free <- aggregate(as.numeric(risk_free$Nrrmtdt), by=list(type=risk_free$yyyymm),mean)
# new_s_c <- left_join(s_c,monthly_risk_free,by="type")
# new_s_c$excess_monthly_return <- new_s_c$monthly_return*100-new_s_c$x
# excess_risk_free <- new_s_c[order(new_s_c$V1),c('V1','type','excess_monthly_return')]
# 算上月末收盘价和这月末收盘价，或者IPO发行价
View(s_c)
gc()
library(dplyr)
library(readxl)
#
# load('E:/deleted_data.Rdata')
# monthly_returns=new_data[,c(1,2,3,4,11)]
# save(monthly_returns,file='E:/monthly_returns.Rdata')
# load('E:/monthly_returns.Rdata')
# monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
# monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
# monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
# # group <- group_by(monthly_returns, V1, V8)
# # 先分组后apply
# start <- aggregate(
#   monthly_returns$V3,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=first
# )
# close <- aggregate(
#   monthly_returns$V4,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=last
# )
# s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
# s_c <- as.data.frame(s_c)
# s_c$V5 <- c(0,s_c[1:nrow(s_c)-1,4])
# s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
#   as.numeric(s_c$V3)
# save(s_c,file='E:/s_c.Rdata')
load('E:/s_c.Rdata')
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
risk_free <- risk_free[3:nrow(risk_free),]
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
risk_free <- as.data.frame(risk_free)
colnames(s_c)[2] <- 'type'
monthly_risk_free <- aggregate(as.numeric(risk_free$Nrrmtdt), by=list(type=risk_free$yyyymm),mean)
new_s_c <- left_join(s_c,monthly_risk_free,by="type")
new_s_c$excess_monthly_return <- new_s_c$monthly_return*100-new_s_c$x
excess_risk_free <- new_s_c[order(new_s_c$V1),c('V1','type','excess_monthly_return')]
# 算上月末收盘价和这月末收盘价，或者IPO发行价
View(monthly_risk_free)
View(s_c)
s_c$monthly_return_next <- (as.numeric(s_c$V4)-as.numeric(s_c$V5))/
as.numeric(s_c$V5)
gc()
load('E:/s_c.Rdata')
s_c$monthly_return_next <- (as.numeric(s_c$V4)-as.numeric(s_c$V5))/
as.numeric(s_c$V5)
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
risk_free <- risk_free[3:nrow(risk_free),]
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
risk_free <- as.data.frame(risk_free)
colnames(s_c)[2] <- 'type'
monthly_risk_free <- aggregate(as.numeric(risk_free$Nrrmtdt), by=list(type=risk_free$yyyymm),mean)
new_s_c <- left_join(s_c,monthly_risk_free,by="type")
new_s_c$excess_monthly_return <- new_s_c$monthly_return*100-new_s_c$x
new_s_c$excess_monthly_return
excess_risk_free <- new_s_c[order(new_s_c$V1),c('V1','type','excess_monthly_return')]
library(dplyr)
library(readxl)
#
# load('E:/deleted_data.Rdata')
# monthly_returns=new_data[,c(1,2,3,4,11)]
# save(monthly_returns,file='E:/monthly_returns.Rdata')
# load('E:/monthly_returns.Rdata')
# monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
# monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
# monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
# # group <- group_by(monthly_returns, V1, V8)
# # 先分组后apply
# start <- aggregate(
#   monthly_returns$V3,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=first
# )
# close <- aggregate(
#   monthly_returns$V4,
#   by=list(monthly_returns$V1, monthly_returns$V8),
#   FUN=last
# )
# s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
# s_c <- as.data.frame(s_c)
# s_c$V5 <- c(0,s_c[1:nrow(s_c)-1,4])
# s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
#   as.numeric(s_c$V3)
# save(s_c,file='E:/s_c.Rdata')
load('E:/s_c.Rdata')
s_c$monthly_return_next <- (as.numeric(s_c$V4)-as.numeric(s_c$V5))/
as.numeric(s_c$V5)
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
risk_free <- risk_free[3:nrow(risk_free),]
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
risk_free <- as.data.frame(risk_free)
colnames(s_c)[2] <- 'type'
monthly_risk_free <- aggregate(as.numeric(risk_free$Nrrmtdt), by=list(type=risk_free$yyyymm),mean)
new_s_c <- left_join(s_c,monthly_risk_free,by="type")
new_s_c$excess_monthly_return <- new_s_c$monthly_return*100-new_s_c$x
new_s_c$excess_monthly_return_next <- new_s_c$monthly_return_next*100-new_s_c$x
excess_risk_free <- new_s_c[order(new_s_c$V1),c('V1','type','excess_monthly_return')]
# 算上月末收盘价和这月末收盘价，或者IPO发行价
View(new_s_c)
gc()
load('E:/s_c.Rdata')
s_c$monthly_return_next <- (as.numeric(s_c$V4)-as.numeric(s_c$V5))/
as.numeric(s_c$V5)
View(s_c)
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
risk_free <- risk_free[3:nrow(risk_free),]
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
risk_free <- as.data.frame(risk_free)
colnames(s_c)[2] <- 'type'
View(s_c)
View(risk_free)
monthly_risk_free <- aggregate(as.numeric(risk_free$Nrrmtdt), by=list(type=risk_free$yyyymm),mean)
View(monthly_risk_free)
View(risk_free)
View(s_c)
View(s_c)
View(monthly_risk_free)
View(s_c)
View(monthly_risk_free)
load('E:/s_c.Rdata')
s_c$monthly_return_next <- (as.numeric(s_c$V4)-as.numeric(s_c$V5))/
as.numeric(s_c$V5)
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
risk_free <- risk_free[3:nrow(risk_free),]
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
risk_free <- as.data.frame(risk_free)
colnames(s_c)[2] <- 'type'
monthly_risk_free <- aggregate(as.numeric(risk_free$Nrrmtdt), by=list(type=risk_free$yyyymm),mean)
new_s_c <- left_join(s_c,monthly_risk_free,by="type")
View(new_s_c)
new_s_c$excess_monthly_return <- new_s_c$monthly_return*100-new_s_c$x
new_s_c$excess_monthly_return_next <- new_s_c$monthly_return_next*100-new_s_c$x
View(new_s_c)
new_s_c$excess_m_r <- c(new_s_c[1,9],new_s_c[2:nrow(new_s_c),10])
View(new_s_c)
excess_risk_free <- new_s_c[order(new_s_c$V1),c('V1','type','excess_m_r')]
View(excess_risk_free)
View(new_s_c)
gc()
library(dplyr)
library(readxl)
load('E:/deleted_data.Rdata')
monthly_returns=new_data[,c(1,2,3,4,11)]
save(monthly_returns,file='E:/monthly_returns.Rdata')
load('E:/monthly_returns.Rdata')
monthly_returns$V6 <- substr(monthly_returns$V1,3,8)
monthly_returns$V7 <- substr(monthly_returns$V1,17,19)
monthly_returns$V8 <- substr(monthly_returns$V2,1,7)
# group <- group_by(monthly_returns, V1, V8)
# 先分组后apply
start <- aggregate(
monthly_returns$V3,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=first
)
close <- aggregate(
monthly_returns$V4,
by=list(monthly_returns$V1, monthly_returns$V8),
FUN=last
)
s_c <- cbind(start$Group.1,start$Group.2,start$x,close$x)
s_c <- as.data.frame(s_c)
s_c[order(s_c$V1),]
s_c$V5 <- c(0,s_c[1:nrow(s_c)-1,4])
s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
as.numeric(s_c$V3)
save(s_c,file='E:/s_c.Rdata')
View(s_c)
s_c <- s_c[order(s_c$V1),]
s_c$V5 <- c(0,s_c[1:nrow(s_c)-1,4])
s_c$monthly_return <- (as.numeric(s_c$V4)-as.numeric(s_c$V3))/
as.numeric(s_c$V3)
save(s_c,file='E:/s_c.Rdata')
View(s_c)
gc()
load('E:/s_c.Rdata')
s_c$monthly_return_next <- (as.numeric(s_c$V4)-as.numeric(s_c$V5))/
as.numeric(s_c$V5)
risk_free <- read_xlsx("C:/Users/User/Desktop/利率/无风险利率文件表160914914(仅供浙江工商大学使用)/BND_Exchange.xlsx")
risk_free <- risk_free[3:nrow(risk_free),]
risk_free$yyyymm <- substr(risk_free$Clsdt,1,7)
risk_free <- as.data.frame(risk_free)
colnames(s_c)[2] <- 'type'
monthly_risk_free <- aggregate(as.numeric(risk_free$Nrrmtdt), by=list(type=risk_free$yyyymm),mean)
new_s_c <- left_join(s_c,monthly_risk_free,by="type")
new_s_c$excess_monthly_return <- new_s_c$monthly_return*100-new_s_c$x
new_s_c$excess_monthly_return_next <- new_s_c$monthly_return_next*100-new_s_c$x
new_s_c$excess_m_r <- c(new_s_c[1,9],new_s_c[2:nrow(new_s_c),10])
excess_risk_free <- new_s_c[order(new_s_c$V1),c('V1','type','excess_m_r')]
View(excess_risk_free)
View(new_s_c)
